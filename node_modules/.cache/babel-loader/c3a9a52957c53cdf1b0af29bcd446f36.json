{"ast":null,"code":"var _jsxFileName = \"/Users/Ben/Documents/GitHub/react_crash_todo/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About'; // import {v4 as uuid} from \"uuid\";\n\nimport Axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      Axios.delete(``);\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      Axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title: title,\n        completed: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      }));\n    };\n\n    this.state = {\n      todos: []\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  } // Toggle Complete\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Ben/Documents/GitHub/react_crash_todo/src/App.js"],"names":["React","BrowserRouter","Router","Route","Header","Todos","AddTodo","About","Axios","App","Component","constructor","props","markComplete","id","setState","todos","state","map","todo","completed","delTodo","delete","filter","addTodo","title","post","then","res","data","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n\n// import {v4 as uuid} from \"uuid\";\nimport Axios from 'axios';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  // Toggle Complete\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if(todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  }\n\n  // Delete Todo\n  delTodo = (id) => {\n    \n    Axios.delete(``)\n\n    this.setState({\n      todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    })\n  }\n\n  addTodo = (title) => {\n    Axios.post('https://jsonplaceholder.typicode.com/todos', { \n      title: title, \n      completed: false\n    })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}